const express = require('express');
const router = express.Router();
const { createProject, getProjects, getProjectDetails, applyToProject, getProjectApplications, updateApplicationStatus, getMyApplications, getCompanyApplications, getProjectTeam, updateProject, deleteProject, cancelProject } = require('../controllers/project.controller.js');
const auth = require('../middleware/auth');
const roles = require('../middleware/roles');
const upload = require('../middleware/upload');
const taskRoutes = require('./task.routes');
const { getComments, createProjectComment, deleteComment, updateComment } = require('../controllers/comment.controller.js');
const { createComment } = require('../controllers/comment.controller');
const { getProjectComments } = require('../controllers/comment.controller.js');

router.post('/', auth, roles('company', 'admin'), upload.array('files'), createProject);
router.get('/', auth, getProjects);
router.get('/:id', auth, getProjectDetails);
router.post('/:id/apply', auth, roles('freelancer'), applyToProject);
router.get('/:id/applications', auth, getProjectApplications);
router.put('/:projectId/applications/:applicationId', auth, updateApplicationStatus);
router.get('/my-applications', auth, roles('freelancer'), getMyApplications);
router.get('/company-applications', auth, roles('company'), getCompanyApplications);
router.get('/:id/team', auth, getProjectTeam);
router.put('/:id', auth, roles('company'), upload.array('files'), updateProject);
router.delete('/:id', auth, roles('company'), deleteProject);
router.patch('/:id/cancel', auth, roles('company'), cancelProject);
router.use('/:projectId/tasks', taskRoutes);
router.get('/:id/comments', auth, getProjectComments);
router.post('/:id/comments', auth, upload.array('files'), createComment);
router.delete('/:id/comments/:commentId', auth, deleteComment);
router.put('/:id/comments/:commentId', auth, updateComment);

module.exports = router;